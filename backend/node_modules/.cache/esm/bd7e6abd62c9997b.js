let User,bcrypt,jwt;_62c‍.x([["login",()=>login],["default",()=>_62c‍.o]]);_62c‍.w("./../../models/user",[["default",["User"],function(v){User=v}]]);_62c‍.w("bcryptjs",[["default",["bcrypt"],function(v){bcrypt=v}]]);_62c‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);



       const login = async(parent, args ,context ,info) => {
    const {email,password} = args 

    const user = await User.findOne({email})

    if(!user) throw new Error('ไม่สามารถเข้าสู่ระบบ กรุณาสมัครสมาชิก')

    //เช็ครหัสผ่าน
    const validPassword = await bcrypt.compare(password, user.password)
    if (!validPassword) throw new Error('อีเมลหรือรหัสผ่านผิด')
    const token = jwt.sign({userId : user.id}, process.env.SECRET,{expiresIn:'7days'})
    return {userId: user.id, jwt:token}

}
_62c‍.d(login);